name: ChatApp CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Set up Docker cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # 4. Build Release image
      - name: Build Release Docker image
        run: |
          docker build \
            --build-arg BUILD_TYPE=Release \
            --target release \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -t chat-app:release .
          rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # 5. Build Debug image
      - name: Build Debug Docker image
        run: |
          docker build \
            --build-arg BUILD_TYPE=Debug \
            --target debug \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -t chat-app:debug .
          rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # 6. Build Test image
      - name: Build Test Docker image
        run: |
          docker build \
            --target test \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -t chat-app:test .
          rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # 7. Run Ceedling tests
      - name: Run unit tests
        run: docker run --rm chat-app:test
